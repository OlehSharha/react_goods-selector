{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearSelected","setState","isSelected","good","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,cAAgB,kBAAM,EAAKC,SAAS,CAAEF,aAAc,MALtD,EAOEG,WAAa,SAACC,GAAD,OAAkBA,IAAS,EAAKL,MAAMC,cAPrD,4CASE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAEG,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,mBAIlB,oBAAIK,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SAEE,gCACGT,EAAMY,KAAI,SAAAL,GAAI,OACb,qBACE,UAAQ,OACRE,UAAWI,IAAW,CACpB,+BAAgC,EAAKP,WAAWC,KAHpD,UAOE,6BACG,EAAKD,WAAWC,GAEb,wBACE,UAAQ,cACRG,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKP,cAJhB,eAWA,wBACE,UAAQ,YACRM,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKN,SAAS,CAC3BF,aAAcI,KALlB,iBAYN,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,qBApEnB,GAAyBO,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d45efc79.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  clearSelected = () => this.setState({ selectedGood: '' });\n\n  isSelected = (good: string) => good === this.state.selectedGood;\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelected}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': this.isSelected(good),\n                })}\n              >\n\n                <td>\n                  {this.isSelected(good)\n                    ? (\n                      <button\n                        data-cy=\"ClearButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.clearSelected}\n                      >\n                        -\n                      </button>\n                    )\n\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.setState({\n                          selectedGood: good,\n                        })}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}